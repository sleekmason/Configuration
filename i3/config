# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:jetbrains mono 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# Autostart programs. use exec_always to restart every time. Use
# --no-startup-id or you may get a clock vs curser for 1 minute on startup.

## If polybar i3-bar is installed, comment out the bar section 
##and uncomment this line.
#exec --no-startup-id ( polybar i3-bar > /dev/null 2>&1 )
exec --no-startup-id "nm-applet"
exec --no-startup-id "xfsettingsd --daemon"
exec --no-startup-id "lxpolkit"
exec --no-startup-id "$HOME/.fehbg"
exec --no-startup-id "pnmixer"
#exec --no-startup-id "picom"

## USE ALTERNATING LAYOUTS
exec --no-startup-id ~/.config/i3/scripts/alternating_layouts.py

# Use pamixer to adjust the volume.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pamixer -i 5
bindsym XF86AudioLowerVolume exec --no-startup-id pamixer -d 5
bindsym XF86AudioMute exec --no-startup-id pamixer -t

#pulseaudio
#bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +2%
#bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -2%
#bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
#bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

#alsa
#bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -q sset Master 2%+
#bindsym XF86AudioLowerVolume exec --no-startup-id amixer -q sset Master 2%-
#bindsym XF86AudioMute exec --no-startup-id amixer -q sset toggle

#Play-pause
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Set brightness
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +10%
bindsym XF86XKMonBrightnessDown exec --no-startup-id brightnessctl set 10%-

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# Assign programs to different workspaces
assign [class="Firefox"] 9

# Floating windows
for_window [class="Yad"] floating enable border pixel 0
for_window [class="feh"] floating enable border pixel 0
for_window [class="Pragha"] floating enable border pixel 0
for_window [class="Gammy"] floating enable border pixel 0
for_window [class="Gpick"] floating enable border pixel 0
for_window [class="live-usb-maker-gui-antix"] floating enable border pixel 0
for_window [class="Arandr"] floating enable border pixel 0
for_window [class="brightness_001"] floating enable border pixel 0

# User added programs
bindsym $mod+Return exec "i3-sensible-terminal"
bindsym Print exec --no-startup-id "xfce4-screenshooter"
bindsym $mod+F1 exec --no-startup-id "jgmenu"
bindsym $mod+F3 exec --no-startup-id "rofi -show drun"
bindsym $mod+F5 exec --no-startup-id "~/.config/dmenu/dmenu"
bindsym $mod+f exec --no-startup-id "thunar"
bindsym $mod+e exec --no-startup-id "geany"
bindsym $mod+p exec --no-startup-id "pragha"
bindsym $mod+b exec --no-startup-id "x-www-browser"
bindsym $mod+x exec --no-startup-id "ld-logout"
bindsym $mod+v exec --no-startup-id "feh-set-wallpaper"
bindsym $mod+z exec --no-startup-id "toggle.ld"

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec --no-startup-id "~/.config/dmenu/dmenu"
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# i3 current colors excluding topbar (polybar)
# class                 border  backgr. text    indicator child_border
client.focused          #4c7899 #2D5C73 #ffffff #4c7899   #2D5C73
client.focused_inactive #121417 #202F38 #ffffff #3D5763   #202F38
client.unfocused        #121417 #202F38 #A4B2B8 #292C2E   #202F38
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #ffffff

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

#focus_follows_mouse yes|no
focus_follows_mouse yes

#popup_during_fullscreen smart|ignore|leave_fullscreen
popup_during_fullscreen smart

# split in vertical, horizontal or toggle orientation
bindsym $mod+Shift+v split vertical
bindsym $mod+Shift+h split horizontal
bindsym $mod+Shift+z split toggle

# enter fullscreen mode for the focused container
bindsym $mod+Shift+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+t layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# cycle through workspaces
bindsym Ctrl+Right workspace next
bindsym Ctrl+Left workspace prev

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m '              Would you like to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

## Resizing by 1 px using directional keys

		bindsym $mod+control+Right resize grow width 1 px or 1 ppt
		bindsym $mod+control+Left resize shrink width 1 px or 1 ppt
		bindsym $mod+control+Up resize shrink height 1 px or 1 ppt
		bindsym $mod+control+Down resize grow height 1 px or 1 ppt

## Easy back and forth in window switching by hitting same key
workspace_auto_back_and_forth yes

## Defaults for floating windows
floating_minimum_size 75 x 50
floating_maximum_size 770 x 900
## or:
# floating_maximum_size -1 x -1

## Set scratchpad
bindsym $mod+minus scratchpad show
bindsym $mod+Shift+minus move scratchpad
## Set specific keybind 
bindsym $mod+BackSpace [class="Thunar"] scratchpad show

## Set window on all screens
bindsym Ctrl+s sticky toggle

## Rename workspace.
bindsym $Mod+n exec i3-input -F 'rename workspace to "%s"' -P 'New name: '

## Show all tags and allow user to select one though dmenu.
bindsym $mod+m exec --no-startup-id $HOME/.config/i3/scripts/i3-dtags.sh -fn '$dfont'
## Show tags, and move the current window to the one selected using dmenu.
bindsym $mod+Shift+m exec --no-startup-id $HOME/.config/i3/scripts/i3-dtags-moveto.sh -fn '$dfont'

######### - BAR STUFF - ##########

## Set Bar toggle for i3blocks
bindsym $mod+i bar mode toggle
## Toggle polybar on/off
#bindsym $mod+Shift+i exec --no-startup-id "toggle.polybar-i3"

##################################
## Start i3bar to display a workspace bar. To disable entirely,
## comment out the full section below. To change to the i3statusbar,
## Comment out the i3blocks line and un-comment the i3status line.

bar {

## Custom i3status command
## For i3blocks use -
status_command i3blocks -c ~/.config/i3/i3blocks.conf

## For i3status use -
#status_command i3status -c $HOME/.config/i3/status.conf

## Workspace
  position top
  workspace_min_width 15
  workspace_buttons yes

## Systemtray  
#  tray_output none
  tray_padding 2
  
## Transparency 
  i3bar_command i3bar --transparency

## top, right, bottom, left
  padding 1px 2px 1px 2px
  
## Bar colors  
  colors {
    background #1C2830bd
    separator #1C2830bd
    statusline #C0C9CC
    focused_workspace #2A656D #2A656D #F0F7FA
    active_workspace #243640 #243640 #E6F0F5
    inactive_workspace #1F2D36 #1F2D36 #B4BEC2
    urgent_workspace #273A45 #942F2F #ffffff
  }
}

##################################

### i3-gaps stuff ###

# Necessary for i3-gaps to work properly (pixel can be any value)
for_window [class="^.*"] border pixel 2
#for_window [class="^.*"] border normal 1
# no border on conky
for_window [class="conky"] border none

# Smart Gaps
smart_gaps on

# Smart Borders
smart_borders on

# Set inner/outer gaps
gaps inner 8
gaps outer 0

# Gaps mode
set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
